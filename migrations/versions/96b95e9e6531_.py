"""empty message

Revision ID: 96b95e9e6531
Revises: 
Create Date: 2019-01-25 12:57:08.706588

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '96b95e9e6531'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apis',
    sa.Column('api_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=True),
    sa.Column('string', sa.String(length=255), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('api_id')
    )
    op.create_table('apps',
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=True),
    sa.Column('string', sa.String(length=255), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('app_id')
    )
    op.create_table('data_sources',
    sa.Column('source_key', sa.String(length=60), nullable=False),
    sa.Column('short_description', sa.String(length=60), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('source_key')
    )
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dkrons',
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('timezone', sa.String(length=100), nullable=True),
    sa.Column('schedule', sa.String(length=100), nullable=True),
    sa.Column('owner', sa.String(length=100), nullable=True),
    sa.Column('owner_email', sa.String(length=100), nullable=True),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.String(length=100), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.Column('concurrency', sa.String(length=60), nullable=True),
    sa.Column('executor', sa.String(length=60), nullable=True),
    sa.Column('exec_command', sa.String(length=250), nullable=True),
    sa.Column('exec_shell', sa.Boolean(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('organizations',
    sa.Column('org_key', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('short_name', sa.String(length=60), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('org_key')
    )
    op.create_table('reports',
    sa.Column('report_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('report_name', sa.String(length=60), nullable=True),
    sa.Column('report_description', sa.String(length=255), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timezones',
    sa.Column('timezoneid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('fset', sa.Integer(), nullable=True),
    sa.Column('offset_dst', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('timezoneid')
    )
    op.create_table('variable_classes',
    sa.Column('variable_class', sa.String(length=60), nullable=False),
    sa.Column('variable_class_description', sa.String(length=60), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('variable_class')
    )
    op.create_table('variables',
    sa.Column('variable_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('variable_name', sa.String(length=60), nullable=True),
    sa.Column('variable_description', sa.String(length=60), nullable=True),
    sa.Column('variable_type', sa.String(length=60), nullable=True),
    sa.Column('variable_default', sa.String(length=60), nullable=True),
    sa.Column('variable_class', sa.String(length=60), nullable=True),
    sa.Column('variable_validator', sa.String(length=255), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('variable_id')
    )
    op.create_table('email_lists',
    sa.Column('email_list_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email_description', sa.String(length=255), nullable=True),
    sa.Column('org_key', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['org_key'], ['organizations.org_key'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('email_list_id')
    )
    op.create_index(op.f('ix_email_lists_org_key'), 'email_lists', ['org_key'], unique=False)
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=60), nullable=True),
    sa.Column('username', sa.String(length=60), nullable=True),
    sa.Column('first_name', sa.String(length=60), nullable=True),
    sa.Column('last_name', sa.String(length=60), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('source_keys',
    sa.Column('org_key', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('source_key', sa.String(length=60), nullable=False),
    sa.Column('source_id', sa.String(length=60), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['org_key'], ['organizations.org_key'], ),
    sa.ForeignKeyConstraint(['source_key'], ['data_sources.source_key'], ),
    sa.PrimaryKeyConstraint('org_key', 'source_key')
    )
    op.create_index(op.f('ix_source_keys_org_key'), 'source_keys', ['org_key'], unique=False)
    op.create_table('variable_values',
    sa.Column('variable_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('org_key', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('var_value', sa.String(length=60), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['org_key'], ['organizations.org_key'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['variable_id'], ['variables.variable_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('variable_id', 'org_key')
    )
    op.create_table('email_recipients',
    sa.Column('email_list_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=60), nullable=False),
    sa.Column('org_key', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['email_list_id'], ['email_lists.email_list_id'], ),
    sa.ForeignKeyConstraint(['org_key'], ['organizations.org_key'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('email_list_id', 'email')
    )
    op.create_table('report_deliveries',
    sa.Column('org_key', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('email_list_id', sa.Integer(), nullable=False),
    sa.Column('filters', sa.String(length=255), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['email_list_id'], ['email_lists.email_list_id'], ),
    sa.ForeignKeyConstraint(['org_key'], ['organizations.org_key'], ),
    sa.ForeignKeyConstraint(['report_id'], ['reports.report_id'], ),
    sa.PrimaryKeyConstraint('org_key', 'report_id', 'email_list_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('report_deliveries')
    op.drop_table('email_recipients')
    op.drop_table('variable_values')
    op.drop_index(op.f('ix_source_keys_org_key'), table_name='source_keys')
    op.drop_table('source_keys')
    op.drop_table('employees')
    op.drop_index(op.f('ix_email_lists_org_key'), table_name='email_lists')
    op.drop_table('email_lists')
    op.drop_table('variables')
    op.drop_table('variable_classes')
    op.drop_table('timezones')
    op.drop_table('roles')
    op.drop_table('reports')
    op.drop_table('organizations')
    op.drop_table('dkrons')
    op.drop_table('departments')
    op.drop_table('data_sources')
    op.drop_table('apps')
    op.drop_table('apis')
    # ### end Alembic commands ###
